[{"D:\\ReactJS@7AM\\02RJS_01NDS\\class_applications\\state-app\\src\\State.tsx":"1"},{"size":3028,"mtime":1608863624904,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"dqm6ks","D:\\ReactJS@7AM\\02RJS_01NDS\\class_applications\\state-app\\src\\State.tsx",["7","8","9","10","11","12"],"import { Table, TableContainer, TableRow, Typography ,TableHead, TableCell, TableBody } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nexport function State():any{\r\n    const [wish,setWish] = useState(\"Hello\");\r\n    const [myNumber,setMyNumber] = useState(100);\r\n    const [flag,setFlag] = useState(true);\r\n    const arr:number[] = [10,20,30,40,50];\r\n    const [numArr,setNumArr] = useState(arr);\r\n    const employees:any[] = [\r\n        {\"e_id\":111,\"e_name\":\"e_one\",\"e_sal\":10000},\r\n        {\"e_id\":222,\"e_name\":\"e_two\",\"e_sal\":20000},\r\n        {\"e_id\":333,\"e_name\":\"e_three\",\"e_sal\":30000},\r\n        {\"e_id\":444,\"e_name\":\"e_four\",\"e_sal\":40000},\r\n        {\"e_id\":555,\"e_name\":\"e_five\",\"e_sal\":50000}\r\n    ];\r\n    const [allEmployees,setAllEmployees] = useState(employees);\r\n    const obj:any = {\r\n        var_one:\"Hello_1\",\r\n        var_two:\"Hello_2\",\r\n        var_three:\"Hello_3\"\r\n    };\r\n    const [myObj,setMyObj] = useState(obj);\r\n    return(\r\n        <React.Fragment>\r\n                <Typography variant=\"h2\" color=\"error\" align=\"center\">\r\n                        {wish}    \r\n                </Typography> \r\n                <Typography variant=\"h2\" color=\"error\" align=\"center\">\r\n                        {myNumber}    \r\n                </Typography>\r\n                <Typography variant=\"h2\" color=\"error\" align=\"center\">\r\n                        {JSON.stringify(flag)}    \r\n                </Typography>  \r\n                 {numArr.map((element:any,index:any):any=>(\r\n                       <Typography key={index} variant=\"h2\" color=\"secondary\">\r\n                            {element}\r\n                       </Typography>                    \r\n                 ))}\r\n                 <TableContainer>\r\n                     <Table>\r\n                         <TableHead>\r\n                            <TableRow>\r\n                                 <TableCell>SNO</TableCell>\r\n                                 <TableCell>E_ID</TableCell>\r\n                                 <TableCell>E_NAME</TableCell>\r\n                                 <TableCell>E_SAL</TableCell>\r\n                            </TableRow>\r\n                         </TableHead>\r\n                         <TableBody>\r\n                            {allEmployees.map((element:any,index:any)=>(\r\n                                <TableRow key={index}>\r\n                                    <TableCell>{index+1}</TableCell>\r\n                                    <TableCell>{element.e_id}</TableCell>\r\n                                    <TableCell>{element.e_name}</TableCell>\r\n                                    <TableCell>{element.e_sal}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                         </TableBody>\r\n                     </Table>\r\n                 </TableContainer>\r\n                 <Typography variant=\"h2\" color=\"secondary\">\r\n                     {myObj.var_one}....{myObj.var_two}....{myObj.var_three}\r\n                 </Typography>\r\n        </React.Fragment>\r\n    )\r\n};",{"ruleId":"13","severity":1,"message":"14","line":8,"column":17,"nodeType":"15","messageId":"16","endLine":8,"endColumn":24},{"ruleId":"13","severity":1,"message":"17","line":9,"column":21,"nodeType":"15","messageId":"16","endLine":9,"endColumn":32},{"ruleId":"13","severity":1,"message":"18","line":10,"column":17,"nodeType":"15","messageId":"16","endLine":10,"endColumn":24},{"ruleId":"13","severity":1,"message":"19","line":12,"column":19,"nodeType":"15","messageId":"16","endLine":12,"endColumn":28},{"ruleId":"13","severity":1,"message":"20","line":20,"column":25,"nodeType":"15","messageId":"16","endLine":20,"endColumn":40},{"ruleId":"13","severity":1,"message":"21","line":26,"column":18,"nodeType":"15","messageId":"16","endLine":26,"endColumn":26},"@typescript-eslint/no-unused-vars","'setWish' is assigned a value but never used.","Identifier","unusedVar","'setMyNumber' is assigned a value but never used.","'setFlag' is assigned a value but never used.","'setNumArr' is assigned a value but never used.","'setAllEmployees' is assigned a value but never used.","'setMyObj' is assigned a value but never used."]